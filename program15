Yacc-Lex code for Desk calculator.

Lex Code
%{
#include<stdlib.h>
#include"y.tab.h"
void yyerror(char *);
int yylval;
%}
%%
[a-z] {yylval= *yytext - 'a'; return id;}
[0-9]+ {yylval=atoi(yytext); return digit;}
[-+()=/*\n] {return *yytext;}
[ \t] ;
. yyerror("Invalid Character");
%%
int yywrap(){
 return 1;
}
Yacc Code
%{
#include<stdio.h>
int yylex(void);
void yyerror(char *);
int sym[26];
%}
%token id digit
%left'+' '-'
%left'*' '/'
%%
P:P S '\n'
| ;
S:E {printf("Output = %d",$1);}
| id'='E {sym[$1]=$3;}
;
E:digit {$$=$1;}
| id {$$=sym[$1];}
| E'+'E {$$=$1+$3;}
| E'-'E {$$=$1-$3;}

| E'*'E {$$=$1*$3;}
| E'/'E {$$=$1/$3;}
| '('E')' {$$=$2;}
;
%%
int main(void){
 yyparse();
 return 0;
}
void yyerror(char *msg){
 fprintf(stderr, "%s \n", msg);
}
